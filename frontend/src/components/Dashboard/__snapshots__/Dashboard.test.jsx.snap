// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Given a Dashboard Component When it is rendered Then screen should match the snapshot 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#FFCA51",
      "flex": 1,
      "justifyContent": "space-around",
      "paddingBottom": 30,
      "paddingTop": 100,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-around",
        "position": "absolute",
        "top": 40,
        "width": "100%",
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "backgroundColor": "darkgrey",
            "borderColor": "black",
            "borderWidth": 2,
            "height": 40,
            "marginLeft": 3,
            "marginTop": 3,
            "width": 40,
          }
        }
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFCA51",
            "borderColor": "black",
            "borderWidth": 2,
            "height": 40,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "width": 40,
          }
        }
      >
        <Image
          source={1}
        />
      </View>
    </View>
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          Object {
            "fontWeight": "bold",
            "marginTop": 15,
          }
        }
      />
    </View>
    <View>
      <View
        style={
          Object {
            "backgroundColor": "darkgrey",
            "borderColor": "black",
            "borderWidth": 2,
            "height": 40,
            "marginLeft": 3,
            "marginTop": 3,
            "width": 40,
          }
        }
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFCA51",
            "borderColor": "black",
            "borderWidth": 2,
            "height": 40,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "width": 40,
          }
        }
      >
        <Image
          source={1}
        />
      </View>
    </View>
  </View>
  <View>
    <Text>
      money: undefined
    </Text>
    <Text>
      hunger: undefined
    </Text>
    <Text>
      hygiene: undefined
    </Text>
    <Text>
      mind: undefined
    </Text>
    <Text>
      health: undefined
    </Text>
    <Text>
      studies: undefined
    </Text>
    <Text>
      leisure: undefined
    </Text>
    <Image
      onPress={[Function]}
      source={1}
      style={
        Object {
          "height": 250,
          "width": 340,
        }
      }
    />
  </View>
  <View
    style={
      Object {
        "height": 300,
      }
    }
  >
    <RCTScrollView>
      <View />
    </RCTScrollView>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "backgroundColor": "darkgrey",
            "borderColor": "black",
            "borderWidth": 2,
            "height": 40,
            "marginLeft": 3,
            "marginTop": 3,
            "width": 40,
          }
        }
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFCA51",
            "borderColor": "black",
            "borderWidth": 2,
            "height": 40,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "width": 40,
          }
        }
        testID="addTaskHandler"
      >
        <Image
          source={1}
        />
      </View>
    </View>
    <View>
      <View
        style={
          Object {
            "backgroundColor": "darkgrey",
            "borderColor": "black",
            "borderWidth": 2,
            "height": 40,
            "marginLeft": 3,
            "marginTop": 3,
            "width": 40,
          }
        }
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#FFCA51",
            "borderColor": "black",
            "borderWidth": 2,
            "height": 40,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "width": 40,
          }
        }
        testID="listHandler"
      >
        <Image
          source={1}
        />
      </View>
    </View>
  </View>
</View>
`;
